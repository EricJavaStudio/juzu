.Juzu 0.8
[cols="2,2,4,8,2",options="header"]
|===
|Name
|Type
|Description
|Use case
|Status

|Asset controller
|Improvement
|Expose a controller for the asset plugin as a controller
|Make easy to generate URL assets in templates, for instance @{Asset.render(css = “toto.js”)}
|100%

|Asset pipeline
|Improvement
|Refactor to provide a compilation pipeline
|Consolidate the existing asset treatment at compilation time to have a compilation pipeline where plugin can feed the pipeline, treatment occurs (such as minification), output is written in the application asset package
|100%

|Require.js improvement
|Improvement
|Improve the integration
|Simplify Require.js integration
|100%

|Webjars plugin improvement
|Improvement
|Improve the integration
|Webjars plugin feeds the (future) asset pipeline at compilation time
|100%

|Asset caching
|Feature
|Declarative and programmtic asset caching
|Web performances
|100%

|Metamodel mixin refactor
|Improvement
|Model some part of the meta model as mixin
|Make router meta model a mixin attached to various part of meta model instead of being centralized
|0%

|Asset filtering
|Improvement
|Allow to filter assets
|Minify assets
|0%

|Asset grouping
|Improvement
|Group assets together
|Allow to group assets together for performance reason
|0%
|===

.Juzu 1.0
[cols="2,2,4,8",options="header"]
|===
|Name
|Type
|Description
|Use case

|Bean Validation
|Feature
|Provide bean validation with JSR 303
|Validate form beans and request parameters

|JSON integration
|Feature
|Integrate with JSON parsing
|JSON datatype should be supported natively either as a JSON object or with a bean mapper

|Simple authorization plugin
|Feature
|Authorization
|Provide a simple implemententation of JAX-RS annotations for servlet/portlet container

|Asset Shiro plugin
|Feature
|Authentication and Authorization
|The plugin already exists but it has not yet been integrated in Juzu codebase : https://github.com/haint/juzu/tree/shiro-plugin/plugins/shiro

|Thymeleaf templating
|Feature
|Thymeleaf based templates
|Use Thymeleaf templates in an application
|===
