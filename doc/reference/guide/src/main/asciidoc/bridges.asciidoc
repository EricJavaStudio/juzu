[[bridges]]
= Bridges

The bridge is the runtime in which Juzu executes, until now Juzu provides two bridges:

* The servlet bridge executes a Juzu application in a servlet container like Tomcat
* The portlet bridge executes a Juzu application in a portlet container inside a portal

== Servlet bridge

The servlet bridge exposes a Juzu application as a servlet in a Servlet Container.

=== Juzu servlet

The first step for using the servlet bridge is to configure the +juzu.bridge.servlet.JuzuServlet+ servlet for
the application. There is a one to one mapping between a Juzu application and a Juzu servlet. Therefore
if you project contains several applications, you should configure a Juzu servlet for each.

=== Servlet configuration

Declaring a Juzu servlet is done in the _web.xml_ file of the web application or using annotations. Annotation
based is described in the <<servlet>> chapter.

.The Juzu servlet configuration
[source,xml]
----
<servlet>
  <servlet-name>JuzuServlet</servlet-name>
  <servlet-class>juzu.bridge.servlet.JuzuServlet</servlet-class>
  <init-param>
    <param-name>juzu.app_name</param-name>
    <param-value>my.application</param-value>
  </init-param>
</servlet>
<servlet-mapping>
  <servlet-name>JuzuServlet</servlet-name>
  <url-pattern>/</url-pattern>
</servlet-mapping>
----

The _juzu.app_name_ init parameter tells Juzu the package of the application to use. The servlet is bound
on the _/_ pattern as the default servlet of the web application.

In case of several applications, each can be configured with a _path mapping_ in addition of the default servlet:

.Path mapping configuration
[source,xml]
----
<servlet-mapping>
  <servlet-name>JuzuServlet</servlet-name>
  <url-pattern>/myapplication/*</url-pattern>
</servlet-mapping>
----

WARNING: Any other kind of _url-pattern_ than the default servlet (_/_) or path mapping is not supported
and will raise an error during startup.

== Portlet bridge

The portlet bridge exposes a Juzu application as a portlet in a Portlet Container.

=== Juzu portlet

The first step for using the portlet bridge is to configure the +juzu.bridge.portlet.JuzuPortlet+ portlet for
the application. There is a one to one mapping between a Juzu application and a Juzu portlet. Therefore
if you project contains several applications, you should configure a Juzu portlet for each.

=== Portlet configuration

Declaring a Juzu portlet is done in the _portlet.xml_ file of the portlet application:

.The Juzu portlet configuration
[source,xml]
----
<portlet>
  <portlet-name>JuzuPortlet</portlet-name>
  <display-name xml:lang="EN">Juzu Portlet Application</display-name>
  <portlet-class>juzu.bridge.portlet.PortletBridge</portlet-class>
  <init-param>
    <param-name>juzu.app_name</param-name>
    <param-value>my.application</param-value>
  </init-param>
  <supports>
    <mime-type>text/html</mime-type>
  </supports>
  <portlet-info>
    <title>Portlet Application</title>
  </portlet-info>
</portlet>
----

The _juzu.app_name_ init parameter tells Juzu the package of the application to use.

== Bridge configuration

Bridge can be configured via the the servlet context parameters of the web application or the servlet/portlet
 init parameters:

.Bridge configuration parameters
[cols="6*^",options="header"]
|===
|Parameter
|Name
|Description
|Scope
|Bridge
|Interpolation

|Application name
|_juzu.app_name_
|application package name
|init param
|servlet/portlet
|none

|Run mode
|_juzu.run_mode_
|_prod_, _dev_ or _live_
|context param
|servlet/Portlet
|system properties

|Request encoding
|_juzu.request_encoding_
|charset name for decoding post requests
|init param
|servlet
|system properties

|Injection container
|_juzu.inject_
|injection container name
|init param/context param
|servlet/portlet
|none
|===

When interpolation occurs, the interpolation format allows to define a default value when the value cannot be resolved:

.Get the run mode from the JVM system properties or use prod value
[source,xml]
----
<context-param>
  <param-name>juzu.run_mode</param-name>
  <param-value>${my_run_mode:prod}</param-value>
</context-param>
----
